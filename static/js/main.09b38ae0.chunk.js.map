{"version":3,"sources":["components/Checkbox/Checkbox.jsx","components/DataTable/DataTable.jsx","components/Alert/Alert.jsx","utils/constants.js","utils/utils.js","App.js","reportWebVitals.js","index.js"],"names":["Checkbox","id","handleClick","isChecked","type","onChange","checked","DataTable","columns","rightAlignID","rows","loadMoreData","onRowClick","onSelectionChange","useState","isCheckAll","setIsCheckAll","isCheck","setIsCheck","ref","useRef","handleScroll","cY","window","scrollY","current","offsetHeight","useEffect","document","addEventListener","removeEventListener","handleRowClick","handleSingleSelect","e","target","Number","filter","item","console","log","width","map","li","style","textAlign","numeric","label","thumbnailUrl","title","className","includes","onClick","src","borderRadius","alt","Alert","children","onClose","pageData","data","per","page","slice","App","results","setResults","show","showAlert","setShowAlert","loading","setData","fetchData","a","axios","get","response","prev","length","rowIndex","alert","checkedItems","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.09b38ae0.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Checkbox = ({ id, handleClick, isChecked }) => {\r\n  return (\r\n    <input\r\n      id={id}\r\n      type=\"checkbox\"\r\n      onChange={handleClick}\r\n      checked={isChecked}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Checkbox;\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport Checkbox from '../Checkbox/Checkbox'\r\nimport './DataTable.scss'\r\n\r\nexport const DataTable = ({columns, rightAlignID, rows, loadMoreData, onRowClick, onSelectionChange}) => {\r\n\tconst [isCheckAll, setIsCheckAll] = useState(false);\r\n  const [isCheck, setIsCheck] = useState([]);\r\n\tconst ref = useRef(null)\r\n\r\n\tconst handleScroll = () => {\r\n\t\tconst cY = window.scrollY;\r\n\t\tconst tbh = ref.current.offsetHeight;\r\n\t\tconst thresh = 1000;\r\n\t\tif (tbh - cY - thresh < 0) loadMoreData()\r\n\t}\r\n\r\n\tuseEffect (() => {\r\n\t\tdocument.addEventListener('scroll', handleScroll);\r\n\t\treturn () => document.removeEventListener('scroll', handleScroll)\r\n\t})\r\n\r\n\tconst handleSelectAll = () => {\r\n    setIsCheckAll(!isCheckAll);\r\n    setIsCheck(rows.map(li => li.id));\r\n    if (isCheckAll) {\r\n      setIsCheck([]);\r\n    }\r\n  };\r\n\r\n\tconst handleRowClick = (id) => {\r\n\t\tonRowClick(id)\r\n\t}\r\n\r\n\tconst handleSingleSelect = e => {\r\n    const { id, checked } = e.target;\r\n    setIsCheck([...isCheck, Number(id)]);\r\n    if (!checked) {\r\n      setIsCheck(isCheck.filter(item => item !== Number(id)));\r\n    }\r\n  };\r\n\t\r\n\tuseEffect(() => {\r\n\t\tonSelectionChange(isCheck);\r\n\t}, [isCheck])\r\n\tconsole.log(isCheck, 'isCheck')\r\n\treturn (\r\n\r\n\t\t<table width=\"100%\">\r\n\t\t\t<thead>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th data-testid=\"select-all\">\r\n\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\tid=\"selectAll\"\r\n\t\t\t\t\t\t\thandleClick={handleSelectAll}\r\n\t\t\t\t\t\t\tisChecked={isCheckAll}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</th>\r\n\t\t\t\t\t{columns.map((item => \r\n\t\t\t\t\t\t<th key={item.id} style={{textAlign: `${item.numeric ? 'right': 'left'}`}} width={item.width} data-testid=\"columnHeader\" >{item.label}</th>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t</tr>\r\n\t\t\t</thead>\r\n\t\t\t<tbody ref={ref}>\r\n\t\t\t\t{rows.map(({id, thumbnailUrl, title}) => \r\n\t\t\t\t\t<tr data-testid='rows' className=\"cursor-pointer\" key={id}>\r\n\t\t\t\t\t\t<td data-testid={`single-checkbox-${id}`}>\r\n\t\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\t\tid={id}\r\n\t\t\t\t\t\t\t\thandleClick={handleSingleSelect}\r\n\t\t\t\t\t\t\t\tisChecked={isCheck.includes(id)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t<td data-testid={`id-row-${id}`} style={{textAlign: `${rightAlignID ? 'right' : 'left'}`}} onClick={() => handleRowClick(id)}>{id}</td>\r\n\t\t\t\t\t\t<td data-testid={`thumbnail-row-${id}`} onClick={() => handleRowClick(id)}><img src={thumbnailUrl} style={{borderRadius: '50%'}} width=\"15px\" alt=\"\" /></td>\r\n\t\t\t\t\t\t<td data-testid={`title-row-${id}`} onClick={() => handleRowClick(id)}>{title}</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t)}\r\n\t\t\t</tbody>\r\n\t\t</table>\r\n\t)\r\n}\r\n","import './Alert.scss';\r\n\r\nexport const Alert = ({children, onClose}) => {\r\n  return (\r\n    <div data-testid=\"alert\" className=\"alert d-flex justify-between align-center\">\r\n      {children}\r\n      <div className=\"cursor-pointer close-btn d-flex justify-center align-center\" onClick={onClose}>x</div>\r\n    </div>\r\n  )\r\n}","export const API_URL = 'https://jsonplaceholder.typicode.com/photos';\r\n\r\nexport const columns = [\r\n\t{id: 'ID', label: 'ID', numeric: true, width: '15px'},\r\n\t{id: 'image', label: '', numeric: false, width: ''},\t\t\r\n\t{id: 'title', label: 'TITLE', numeric: false, width: ''},\t\t\r\n]","export const pageData = ({  data, per = 50, page = 1}) => {\r\n\treturn data.slice(per * (page - 1), per * page);\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { DataTable } from './components/DataTable/DataTable';\r\nimport { Alert } from './components/Alert/Alert';\r\nimport { API_URL, columns } from './utils/constants';\r\nimport { pageData} from './utils/utils';\r\nimport './styles/index.css';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n\tconst [results, setResults] = useState([]);\r\n\tconst [showAlert, setShowAlert] = useState({show: false, data: []})\r\n\tconst [data, setData] = useState({\r\n\t\tdata: [],\r\n\t\tloading: false,\r\n\t\tpage: 1\r\n\t});\r\n\r\n\tconst fetchData = async() => {\r\n\t\ttry {\r\n\t\t\tconst response = await axios.get(API_URL);\r\n\t\t\tconst { data } = response;\r\n\t\t\tif(data){\r\n\t\t\t\tsetResults(data)\r\n\t\t\t\tsetData({\r\n\t\t\t\t\tdata: pageData({ data }),\r\n\t\t\t\t\tloading: false,\r\n\t\t\t\t\tpage: 1\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error)\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchData()\r\n\t}, [])\r\n\t\r\n\tconst loadMoreData = () => {\r\n\t\tif(data.loading) return;\r\n\t\tsetData((prev) => ({\r\n\t\t\t...prev,\r\n\t\t\tloading: true\r\n\t\t}))\r\n\r\n\t\tsetData((prev) => {\r\n\t\t\treturn({\r\n\t\t\tdata: [\r\n\t\t\t\t...prev.data,\r\n\t\t\t\t...pageData({ data: results, page: prev.page + 1})\r\n\t\t\t],\r\n\t\t\tloading: false,\r\n\t\t\tpage: prev.page + 1\r\n\t\t})})\r\n\t}\r\n\r\n\tconst onRowClick = (rowIndex) => {\r\n\t\talert(`You just clicked on row ${rowIndex}`)\r\n\t}\r\n\r\n\tconst onSelectionChange = (checkedItems) => {\r\n\t\tif(checkedItems.length > 0){\r\n\t\t\treturn setShowAlert(prev => ({...prev, show: true, data: checkedItems}))\r\n\t\t}\r\n\t\treturn setShowAlert(prev => ({...prev, show: false, data: []}))\r\n\t}\r\n\t\r\n\tconst onCloseAlert = () => {\r\n\t\tsetShowAlert(prev => ({...prev, show: false, data: []}))\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='App'>\r\n\t\t\t<div className='container d-flex justify-center'>\r\n\t\t\t\t<h2 className=\"header m-0\">DataTable</h2>\r\n\t\t\t</div>\r\n\t\t\t<hr />\r\n\t\t\t<div className='container'>\r\n\t\t\t\t{console.log(showAlert.show , 'showAlert.show ')}\r\n\t\t\t\t{showAlert.show && <div className=\"w-100 d-flex justify-center\">\r\n\t\t\t\t\t<Alert onClose={onCloseAlert}>{`${showAlert.data.length} item${showAlert.data.length === 1 ? '' : 's'} selected`}</Alert>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t\t{data && <DataTable\r\n\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t\trows={data?.data}\r\n\t\t\t\t\tloadMoreData={loadMoreData}\r\n\t\t\t\t\tonRowClick={onRowClick}\r\n\t\t\t\t\tonSelectionChange={onSelectionChange}\r\n\t\t\t\t\trightAlignID={true}\r\n\t\t\t\t/>}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}